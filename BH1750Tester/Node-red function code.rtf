{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red255\green255\blue254;\red0\green0\blue0;
\red0\green0\blue255;\red144\green1\blue18;\red19\green118\blue70;\red14\green110\blue109;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c0;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c0\c0\c100000;\cssrgb\c63922\c8235\c8235;\cssrgb\c3529\c52549\c34510;\cssrgb\c0\c50196\c50196;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Get previous state and exposure time\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 var\cf0 \strokec4  prevState = context.\cf5 \strokec5 get\cf0 \strokec4 (\cf6 \strokec6 "prevState"\cf0 \strokec4 ) || \cf6 \strokec6 "unknown"\cf0 \strokec4 ;\cb1 \
\cf5 \cb3 \strokec5 var\cf0 \strokec4  totalExposureTime = context.\cf5 \strokec5 get\cf0 \strokec4 (\cf6 \strokec6 "totalExposureTime"\cf0 \strokec4 ) || \cf7 \strokec7 0\cf0 \strokec4 ;\cb1 \
\cf5 \cb3 \strokec5 var\cf0 \strokec4  lastUpdateTime = context.\cf5 \strokec5 get\cf0 \strokec4 (\cf6 \strokec6 "lastUpdateTime"\cf0 \strokec4 ) || \cf8 \strokec8 Date\cf0 \strokec4 .now();\cb1 \
\cf5 \cb3 \strokec5 var\cf0 \strokec4  emailSent = context.\cf5 \strokec5 get\cf0 \strokec4 (\cf6 \strokec6 "emailSent"\cf0 \strokec4 ) || \cf5 \strokec5 false\cf0 \strokec4 ;  \cf2 \strokec2 // Track if email was sent today\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // Get the current date (YYYY-MM-DD format) to track daily reset\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 var\cf0 \strokec4  currentDate = \cf5 \strokec5 new\cf0 \strokec4  \cf8 \strokec8 Date\cf0 \strokec4 ().toISOString().split(\cf6 \strokec6 "T"\cf0 \strokec4 )[\cf7 \strokec7 0\cf0 \strokec4 ];\cb1 \
\cf5 \cb3 \strokec5 var\cf0 \strokec4  lastEmailDate = context.\cf5 \strokec5 get\cf0 \strokec4 (\cf6 \strokec6 "lastEmailDate"\cf0 \strokec4 ) || \cf6 \strokec6 ""\cf0 \strokec4 ;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // Convert sunlight reading\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 //assuming terrarium has kept inside the house\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 var\cf0 \strokec4  sunlight = parseFloat(msg.payload);\cb1 \
\cf5 \cb3 \strokec5 var\cf0 \strokec4  threshold = \cf7 \strokec7 100\cf0 \strokec4 ;  \cf2 \strokec2 // Light threshold in lux\cf0 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 var\cf0 \strokec4  hysteresis = \cf7 \strokec7 5\cf0 \strokec4 ;\cb1 \
\cf5 \cb3 \strokec5 var\cf0 \strokec4  exposureLimit = \cf7 \strokec7 30\cf0 \strokec4 ; \cf2 \strokec2 //2 * 60 * 60 * 1000;  // 2 hours in milliseconds (changed for testing)\cf0 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 var\cf0 \strokec4  email_subject = \cf6 \strokec6 "Terrarium Sunlight Alert"\cf0 \strokec4 ;\cb1 \
\
\cf5 \cb3 \strokec5 var\cf0 \strokec4  newState;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // Determine if sunlight is detected or stopped\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 if\cf0 \strokec4  (sunlight > (threshold + hysteresis)) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     newState = \cf6 \strokec6 "sunlight detected"\cf0 \strokec4 ;\cb1 \
\cb3 \} \cf5 \strokec5 else\cf0 \strokec4  \cf5 \strokec5 if\cf0 \strokec4  (sunlight < (threshold - hysteresis)) \{\cb1 \
\cb3     newState = \cf6 \strokec6 "sunlight stopped"\cf0 \strokec4 ;\cb1 \
\cb3 \} \cf5 \strokec5 else\cf0 \strokec4  \{\cb1 \
\cb3     newState = prevState;  \cf2 \strokec2 // Keep previous state\cf0 \cb1 \strokec4 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // Track exposure time\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 var\cf0 \strokec4  currentTime = \cf8 \strokec8 Date\cf0 \strokec4 .now();\cb1 \
\cf5 \cb3 \strokec5 if\cf0 \strokec4  (newState === \cf6 \strokec6 "sunlight detected"\cf0 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     totalExposureTime += (currentTime - lastUpdateTime);\cb1 \
\cb3     node.warn(\cf6 \strokec6 "Sunlight Detected! Total exposure: "\cf0 \strokec4  + (totalExposureTime / \cf7 \strokec7 1000\cf0 \strokec4 ) + \cf6 \strokec6 " seconds."\cf0 \strokec4 );\cb1 \
\cb3 \} \cf5 \strokec5 else\cf0 \strokec4  \cf5 \strokec5 if\cf0 \strokec4  (newState === \cf6 \strokec6 "sunlight stopped"\cf0 \strokec4  && prevState !== \cf6 \strokec6 "sunlight stopped"\cf0 \strokec4 ) \{\cb1 \
\cb3     node.warn(\cf6 \strokec6 "Sunlight Stopped."\cf0 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // Save current time for next cycle\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 context.\cf5 \strokec5 set\cf0 \strokec4 (\cf6 \strokec6 "lastUpdateTime"\cf0 \strokec4 , currentTime);\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // Check if it's a new day -> Reset totalExposureTime & emailSent flag\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 if\cf0 \strokec4  (currentDate !== lastEmailDate) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     totalExposureTime = \cf7 \strokec7 0\cf0 \strokec4 ;  \cf2 \strokec2 // Reset exposure time for the new day\cf0 \cb1 \strokec4 \
\cb3     emailSent = \cf5 \strokec5 false\cf0 \strokec4 ;  \cf2 \strokec2 // Allow email to be sent again\cf0 \cb1 \strokec4 \
\cb3     context.\cf5 \strokec5 set\cf0 \strokec4 (\cf6 \strokec6 "lastEmailDate"\cf0 \strokec4 , currentDate);  \cf2 \strokec2 // Update last email date\cf0 \cb1 \strokec4 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // Send an email when exposure reaches 2 hours\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 if\cf0 \strokec4  (totalExposureTime >= exposureLimit && !emailSent) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     msg.topic = email_subject;\cb1 \
\cb3     msg.payload = \cf6 \strokec6 "Terrarium has been exposed to sunlight for 2 hours. Move it away!"\cf0 \strokec4 ;\cb1 \
\
\cb3     emailSent = \cf5 \strokec5 true\cf0 \strokec4 ;  \cf2 \strokec2 // Prevent duplicate emails\cf0 \cb1 \strokec4 \
\cb3     context.\cf5 \strokec5 set\cf0 \strokec4 (\cf6 \strokec6 "emailSent"\cf0 \strokec4 , emailSent);\cb1 \
\
\cb3     \cf5 \strokec5 return\cf0 \strokec4  msg;  \cf2 \strokec2 // Send email\cf0 \cb1 \strokec4 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // Update stored state and exposure time\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 context.\cf5 \strokec5 set\cf0 \strokec4 (\cf6 \strokec6 "prevState"\cf0 \strokec4 , newState);\cb1 \
\cb3 context.\cf5 \strokec5 set\cf0 \strokec4 (\cf6 \strokec6 "totalExposureTime"\cf0 \strokec4 , totalExposureTime);\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 return\cf0 \strokec4  \cf5 \strokec5 null\cf0 \strokec4 ;  \cf2 \strokec2 // No email unless limit is reached\cf0 \cb1 \strokec4 \
\
}